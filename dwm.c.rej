--- dwm.c
+++ dwm.c
@@ -453,7 +464,7 @@ buttonpress(XEvent *e)
 			arg.ui = 1 << i;
 		} else if (ev->x < x + TEXTW(selmon->ltsymbol))
 			click = ClkLtSymbol;
-		else if (ev->x > selmon->ww - (int)TEXTW(stext))
+		else if (ev->x > selmon->ww - status_range)
 			click = ClkStatusText;
 		else
 			click = ClkWinTitle;
@@ -718,16 +732,27 @@ drawbar(Monitor *m)
 	int boxw = drw->fonts->h / 6 + 2;
 	unsigned int i, occ = 0, urg = 0;
 	Client *c;
+	drw_funcs statusbar[3] = {sb_roundcorner, sb_powerline, sb_xmonad};
+	int n = -1, index = 0;
+	const char *delim = ",";
+	/* assuming maximum of 20 'components' in the status bar */
+	const char *info[20];
+	char scopy[256];
 
 	if (!m->showbar)
 		return;
 
 	/* draw status first so it can be overdrawn by tags later */
 	if (m == selmon) { /* status is only drawn on selected monitor */
-		drw_setscheme(drw, scheme[SchemeNorm]);
-		tw = TEXTW(stext) - lrpad + 2; /* 2px right padding */
-		drw_text(drw, m->ww - tw, 0, tw, bh, 0, stext, 0);
+		strcpy(scopy, stext);
+		char *token = strtok(scopy, delim);
+		while (token) {
+			info[++n] = token;
+			token = strtok(NULL, delim);
+		}
+		statusbar[which_sb % LENGTH(statusbar)](m->ww, &tw, n, index, info);
 	}
+	status_range = tw;
 
 	for (c = m->clients; c; c = c->next) {
 		occ |= c->tags;
@@ -1695,6 +1830,9 @@ setup(void)
 	scheme = ecalloc(LENGTH(colors), sizeof(Clr *));
 	for (i = 0; i < LENGTH(colors); i++)
 		scheme[i] = drw_scm_create(drw, colors[i], 3);
+	sb_scheme = ecalloc(LENGTH(sb_colours), sizeof(Clr *));
+	for (i = 0; i < LENGTH(sb_colours); i++)
+		sb_scheme[i] = drw_scm_create(drw, sb_colours[i], 2);
 	/* init bars */
 	updatebars();
 	updatestatus();
